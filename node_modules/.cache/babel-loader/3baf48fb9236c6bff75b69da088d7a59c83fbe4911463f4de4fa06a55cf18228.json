{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Codage React\\\\The Food Order App\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Card from '../UI/Card';\nimport Spinner from '../Spinner';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://food-order-app-4d025-default-rtdb.firebaseio.com/meals.jso').then();\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const responseData = await response.json();\n      const loadedMelas = [];\n      for (const key in responseData) {\n        loadedMelas.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      setMeals(loadedMelas);\n      setIsLoading(false);\n    };\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useEffect","useState","Card","Spinner","MealItem","classes","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","then","ok","Error","responseData","json","loadedMelas","key","push","id","name","description","price","catch","error","message","className","MealsLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","MealsError","mealsList","map","meal","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Codage React/The Food Order App/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport Card from '../UI/Card';\nimport Spinner from '../Spinner';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\n\n\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n     const response = await fetch('https://food-order-app-4d025-default-rtdb.firebaseio.com/meals.jso').then();\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n     const responseData = await response.json();\n     const loadedMelas = [];\n\n     for (const key in responseData) {\n         loadedMelas.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n         });\n     }\n     setMeals(loadedMelas);\n     setIsLoading(false);\n    };\n\n     fetchMeals().catch(error => {\n       setIsLoading(false);\n       setHttpError(error.message);\n     });\n     \n  }, []);\n\n  if (isLoading) {\n    return (\n    <section className={classes.MealsLoading}>\n        <Spinner/>\n    </section>\n    );\n  }\n\n   if (httpError) {\n      return(\n        <section className={classes.MealsError}>\n          <p>{httpError}</p>\n        </section>\n      )\n   }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}