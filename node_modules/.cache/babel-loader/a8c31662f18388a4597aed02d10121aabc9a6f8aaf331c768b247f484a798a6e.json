{"ast":null,"code":"import _slicedToArray from\"C:/Users/admin/Desktop/Codage React/The Food Order App/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useRef,useState}from'react';import classes from'./Checkout.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isEmpty=function isEmpty(value){return value.trim()==='';};var isFiveChars=function isFiveChars(value){return value.trim().length===6;};var Checkout=function Checkout(props){var _useState=useState({name:true,street:true,city:true,postalcode:true}),_useState2=_slicedToArray(_useState,2),formInputsValidity=_useState2[0],setformInputsValidity=_useState2[1];var nameInputRef=useRef();var streetInputRef=useRef();var postalCodeInputRef=useRef();var cityInputRef=useRef();var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredStreet=streetInputRef.current.value;var enteredPostalCode=postalCodeInputRef.current.value;var enteredCity=cityInputRef.current.value;var enteredNameIsValid=!isEmpty(enteredName);var enteredStreetIsValid=!isEmpty(enteredStreet);var enteredCityIsValid=!isEmpty(enteredCity);var enteredPostalCodeIsValid=isFiveChars(enteredPostalCode);setformInputsValidity({name:enteredNameIsValid,street:enteredStreetIsValid,city:enteredCityIsValid,postalcode:enteredPostalCodeIsValid});var formIsValid=enteredNameIsValid&&enteredStreetIsValid&&enteredCityIsValid&&enteredPostalCodeIsValid;if(!formIsValid){return;}props.onConfirm({name:enteredName,street:enteredStreet,city:enteredCity,postalcode:enteredPostalCode});};var nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.name?'':classes.invalid);var streetControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.street?'':classes.invalid);var postalCodeControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.postalcode?'':classes.invalid);var cityControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.city?'':classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputsValidity.name&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:\"Please enter a valid name!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:streetControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInputRef}),!formInputsValidity.street&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:\"Please enter a valid street!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:postalCodeControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postal\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postal\",ref:postalCodeInputRef}),!formInputsValidity.postalcode&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:\"Please enter a valid postal-Code!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:cityControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInputRef}),!formInputsValidity.city&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:\"Please enter a valid city!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"names":["useRef","useState","classes","jsx","_jsx","jsxs","_jsxs","isEmpty","value","trim","isFiveChars","length","Checkout","props","_useState","name","street","city","postalcode","_useState2","_slicedToArray","formInputsValidity","setformInputsValidity","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","nameControlClasses","concat","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","className","form","onSubmit","children","htmlFor","type","id","ref","style","color","actions","onClick","onCancel","submit"],"sources":["C:/Users/admin/Desktop/Codage React/The Food Order App/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from 'react';\n\nimport classes from './Checkout.module.css';\n\n  const isEmpty = value => value.trim() === '';\n  const isFiveChars = value => value.trim().length === 6;\n\nconst Checkout = (props) => {\n  const [formInputsValidity, setformInputsValidity] = useState({\n      name: true,\n      street: true,\n      city: true,\n      postalcode: true\n  });  \n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n\n     setformInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalcode: enteredPostalCodeIsValid\n     });\n\n    const formIsValid = \n            enteredNameIsValid &&\n            enteredStreetIsValid &&\n            enteredCityIsValid &&\n            enteredPostalCodeIsValid;\n\n      if (!formIsValid) {\n         return;\n      }\n\n     props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalcode: enteredPostalCode,\n     });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalcode ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameInputRef} />\n        {!formInputsValidity.name && <p style={{color:\"red\"}}>Please enter a valid name!</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street' ref={streetInputRef}/>\n        {!formInputsValidity.street && <p style={{color:\"red\"}}>Please enter a valid street!</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalCodeInputRef}/>\n        {!formInputsValidity.postalcode && <p style={{color:\"red\"}}>Please enter a valid postal-Code!</p>}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef}/>\n        {!formInputsValidity.city && <p style={{color:\"red\"}}>Please enter a valid city!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}